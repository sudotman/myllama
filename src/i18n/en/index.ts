import type { BaseTranslation } from '../i18n-types';

const en = {
	addConnection: 'add connection',
	allowConnections: 'change your server settings to allow connections from',
	allowMixedContent: 'allow mixed content',
	apiKey: 'api key',
	areYouSureYouWantToDeleteAllKnowledge: 'are you sure you want to delete all knowledge?',
	areYouSureYouWantToDeleteAllSessions: 'are you sure you want to delete all sessions?',
	areYouSureYouWantToDeleteAllSettings: 'are you sure you want to delete all settings?',
	areYouSureYouWantToLeave: 'are you sure you want to leave?\nthe completion in progress will stop',
	assistant: 'assistant',
	automatic: 'auto',
	automaticallyCheckForUpdates: 'automatically check for updates',
	availableModels: 'available models',
	baseUrl: 'base url',
	browseModels: 'browse the list of available models',
	cancel: 'cancel',
	cantConnectToOllamaServer: "can't connect to ollama server",
	checkBrowserExtensions: 'also check no browser extensions are blocking the connection',
	checkingForUpdates: 'checking for updates...',
	checkNow: 'check now',
	clear: 'clear',
	confirmDeletion: 'confirm deletion',
	connectionType: 'connection type',
	connectionLabelHelp: 'identifies the connection in the models list',
	connecting: 'connecting...',
	connectionIsVerified: 'connection has been verified and is ready to use',
	connectionFailedToVerify: 'connection failed to verify, check the connection settings and try again',
	content: 'content',
	controls: 'controls',
	controlsOnlyAvailableForOllama: 'advanced controls are currently only available for ollama models',
	copy: 'copy',
	couldntCheckForUpdates: "couldn't check for updates automatically",
	couldntConnectToOllamaServer: "couldn't connect to ollama server",
	creatingTunnel: 'creating a tunnel',
	currentVersion: 'current version',
	dangerZone: 'danger zone',
	dark: 'dark',
	deleteAllKnowledge: 'delete all knowledge',
	deleteAllSessions: 'delete all sessions',
	deleteAllSettings: 'delete all settings',
	deleteKnowledge: 'delete knowledge',
	deleteServer: 'delete server',
	deleteSession: 'delete session',
	disconnected: 'disconnected',
	dismiss: 'dismiss',
	downloadModel: 'download model',
	edit: 'edit',
	emptyKnowledge: 'no knowledge',
	emptySessions: 'no sessions',
	error: 'error',
	f16Kv: 'f16 kv',
	frequencyPenalty: 'frequency penalty',
	genericError: 'sorry, something went wrong',
	goToDownloads: 'go to downloads',
	goToKnowledge: 'go to knowledge',
	goToReleases: 'go to releases',
	howToObtainOpenAIKey: 'how to obtain an api key from openai?',
	howToUpdateDocker: 'how to update docker container?',
	interface: 'interface',
	internalServerError: 'there was an internal server error, please try again later',
	isCurrentVersionLatest: 'you are on the latest version',
	isLatestVersion: 'a newer version is available',
	knowledge: 'knowledge',
	knowledgeSaved: 'knowledge saved',
	label: 'label',
	language: 'language',
	lastUsedModels: 'recently used models',
	light: 'light',
	lowVram: 'low vram',
	mainGpu: 'main gpu',
	messageOfTheDay: 'message of the day',
	messages: 'messages',
	minP: 'min p',
	mirostat: 'mirostat',
	mirostatEta: 'mirostat eta',
	mirostatTau: 'mirostat tau',
	modelNotFound: 'model not found',
	modelOptions: 'model options',
	modelWasDownloaded: '{model:string} was downloaded',
	modelsFilter: 'model names filter',
	modelsFilterHelp: "hides model names that don't start with the filter",
	motd: 'motd',
	name: 'name',
	newKnowledge: 'new knowledge',
	newSession: 'new session',
	noApiKey: 'no api key',
	noKnowledgeChosen: 'create new knowledge or choose one from the list',
	noRecentModels: 'no recently used models',
	noServerConnections: 'no server connections, add one to start',
	noSessionChosen: 'create a new session or choose an existing one from the list',
	notFound: 'the page you are looking for does not exist',
	numBatch: 'num batch',
	numCtx: 'context size',
	numGpu: 'num gpu',
	numKeep: 'num keep',
	numPredict: 'num predict',
	numThread: 'number of threads',
	numa: 'numa',
	ollama: 'ollama',
	ollamaLibrary: "ollama's library",
	openAIOfficialAPI: 'openai: official api',
	openAICompatible: 'openai: compatible servers (i.e. llama.cpp)',
	otherModels: 'other models',
	penalizeNewline: 'penalize newline',
	presencePenalty: 'presence penalty',
	prompt: 'prompt',
	promptPlaceholder: 'write literally anything',
	pullModel: 'pull model',
	pullModelPlaceholder: 'model tag (e.g. llama3.1)',
	pullingModel: 'pulling model',
	random: 'random',
	reasoning: 'reasoning',
	refreshToUpdate: 'refresh to update',
	releaseHistory: 'release history',
	repeatLastN: 'repeat last n',
	repeatPenalty: 'repeat penalty',
	retry: 'retry',
	run: 'run',
	reVerify: 're-verify',
	runtimeOptions: 'runtime options',
	save: 'save',
	search: 'search',
	searchEmpty: 'no results found',
	seed: 'seed',
	seeDocs: 'see docs',
	servers: 'servers',
	serverSettingsUpdated: 'server configuration was updated and needs to be re-verified in "settings"',
	session: 'session',
	sessions: 'sessions',
	settings: 'settings',
	somethingWentWrong: 'sorry, something went wrong',
	stop: 'stop sequence',
	stopCompletion: 'stop completion',
	stopResponse: 'stop response',
	success: 'success',
	system: 'system',
	systemPrompt: 'system prompt',
	temperature: 'temperature',
	tfsZ: 'tfs z',
	topK: 'top k',
	topP: 'top p',
	tryingToConnectNotLocalhost: 'if you want to connect to an ollama server that is not available on {hostname:string} or {ip:string} try',
	typicalP: 'typical p',
	useMlock: 'use mlock',
	useMmap: 'use mmap',
	useModelsFromThisServer: 'use models from this server',
	verify: 'verify',
	version: 'version',
	vocabOnly: 'vocab only',
	writePromptToStart: 'write a prompt to start a new session',
	you: 'you',
	copiedNotPrivate: 'content copied, but your connection is not private',
	notCopiedNotPrivate: "couldn't copy content. connection is not private"
} satisfies BaseTranslation;

export default en;
